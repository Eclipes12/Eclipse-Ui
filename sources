-- source.lua

local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local CustomUILibrary = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(25, 25, 25),
            Second = Color3.fromRGB(32, 32, 32),
            Stroke = Color3.fromRGB(60, 60, 60),
            Divider = Color3.fromRGB(60, 60, 60),
            Text = Color3.fromRGB(240, 240, 240),
            TextDark = Color3.fromRGB(150, 150, 150)
        }
    },
    SelectedTheme = "Default",
    SaveCfg = false,
    ConfigFolder = "CustomUILibraryConfigs"
}

-- Helper function to create UI components
local function CreateUIComponent(Type, Parent, Properties)
    local component = Instance.new(Type)
    for prop, value in pairs(Properties) do
        component[prop] = value
    end
    component.Parent = Parent
    return component
end

-- MakeWindow Function
function CustomUILibrary:MakeWindow(Options)
    local Window = Instance.new("Frame")
    Window.Name = Options.Name or "Custom Window"
    Window.Size = UDim2.new(0, 400, 0, 300)
    Window.Position = UDim2.new(0.5, -200, 0.5, -150)
    Window.AnchorPoint = Vector2.new(0.5, 0.5)
    Window.BackgroundColor3 = self.Themes[self.SelectedTheme].Main
    Window.Visible = true

    -- Title Bar
    local TitleBar = CreateUIComponent("TextLabel", Window, {
        Text = Options.Name,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = self.Themes[self.SelectedTheme].Second,
        TextColor3 = self.Themes[self.SelectedTheme].Text,
        TextScaled = true,
        TextAlign = Enum.TextAnchor.MiddleCenter
    })

    -- Save configuration if enabled
    if Options.SaveConfig then
        -- Add save/load functionality here (could use JSON, DataStore, etc.)
    end

    self.Elements[Window.Name] = Window
    return Window
end

-- MakeTab Function
function CustomUILibrary:MakeTab(Options)
    local Tab = Instance.new("Frame")
    Tab.Size = UDim2.new(0, 380, 0, 220)
    Tab.BackgroundColor3 = self.Themes[self.SelectedTheme].Second
    Tab.Position = UDim2.new(0.5, -190, 0.5, -110)

    -- Tab Title
    local TabTitle = CreateUIComponent("TextLabel", Tab, {
        Text = Options.Name,
        Size = UDim2.new(1, 0, 0, 30),
        BackgroundColor3 = self.Themes[self.SelectedTheme].Stroke,
        TextColor3 = self.Themes[self.SelectedTheme].Text,
        TextScaled = true,
        TextAlign = Enum.TextAnchor.MiddleCenter
    })

    self.Elements[Tab.Name] = Tab
    return Tab
end

-- Function to allow users to easily create buttons
function CustomUILibrary:AddButton(Window, ButtonName, Callback)
    local Button = Instance.new("TextButton")
    Button.Parent = Window
    Button.Size = UDim2.new(0, 200, 0, 50)
    Button.Position = UDim2.new(0, 0, 0, 40)
    Button.Text = ButtonName
    Button.BackgroundColor3 = self.Themes[self.SelectedTheme].Stroke
    Button.TextColor3 = self.Themes[self.SelectedTheme].Text
    Button.TextScaled = true

    Button.MouseButton1Click:Connect(function()
        Callback()
    end)

    table.insert(self.Elements, Button)
    return Button
end

-- Function to initialize the library
function CustomUILibrary:Init()
    -- Any additional setup if needed
end

-- Return the library so it can be accessed by users
return CustomUILibrary

-- Services
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local LocalPlayer = game:GetService("Players").LocalPlayer
local Mouse = LocalPlayer:GetMouse()
local HttpService = game:GetService("HttpService")

-- Library Structure
local YourLib = {
    Elements = {},
    ThemeObjects = {},
    Connections = {},
    Flags = {},
    Themes = {
        Default = {
            Main = Color3.fromRGB(25, 25, 25),
            Second = Color3.fromRGB(32, 32, 32),
            Stroke = Color3.fromRGB(60, 60, 60),
            Divider = Color3.fromRGB(60, 60, 60),
            Text = Color3.fromRGB(240, 240, 240),
            TextDark = Color3.fromRGB(150, 150, 150)
        }
    },
    SelectedTheme = "Default",
    Folder = nil,
    SaveCfg = false
}

-- Window Creation
function YourLib:MakeWindow(options)
    local Window = Instance.new("ScreenGui")
    Window.Name = options.Name or "YourWindow"
    Window.Parent = game.CoreGui
    Window.ResetOnSpawn = false

    local MainFrame = Instance.new("Frame")
    MainFrame.Size = UDim2.new(0, 600, 0, 400)
    MainFrame.Position = UDim2.new(0.5, -300, 0.5, -200)
    MainFrame.BackgroundColor3 = self.Themes[self.SelectedTheme].Main
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = Window

    -- Title
    local Title = Instance.new("TextLabel")
    Title.Text = options.Name or "Your Custom UI"
    Title.Size = UDim2.new(1, 0, 0, 30)
    Title.BackgroundTransparency = 1
    Title.TextColor3 = self.Themes[self.SelectedTheme].Text
    Title.TextSize = 24
    Title.Font = Enum.Font.GothamBold
    Title.Parent = MainFrame

    -- Drag functionality
    local dragging = false
    local dragStart, startPos
    local function updateInput(input)
        if dragging then
            local delta = input.Position - dragStart
            MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end

    Title.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    UserInputService.InputChanged:Connect(updateInput)

    -- Close Button
    local CloseButton = Instance.new("TextButton")
    CloseButton.Text = "X"
    CloseButton.Size = UDim2.new(0, 30, 0, 30)
    CloseButton.Position = UDim2.new(1, -40, 0, 5)
    CloseButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
    CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    CloseButton.Font = Enum.Font.GothamBold
    CloseButton.TextSize = 18
    CloseButton.Parent = MainFrame
    CloseButton.MouseButton1Click:Connect(function()
        Window:Destroy()
    end)

    return Window
end

-- Tab Creation
function YourLib:MakeTab(options)
    local Tab = Instance.new("Frame")
    Tab.Name = options.Name
    Tab.Size = UDim2.new(1, 0, 0, 50)
    Tab.BackgroundColor3 = self.Themes[self.SelectedTheme].Second
    Tab.BorderSizePixel = 0
    Tab.Parent = self.Elements.MainFrame

    local TabLabel = Instance.new("TextLabel")
    TabLabel.Text = options.Name
    TabLabel.Size = UDim2.new(0, 150, 0, 50)
    TabLabel.BackgroundTransparency = 1
    TabLabel.TextColor3 = self.Themes[self.SelectedTheme].Text
    TabLabel.TextSize = 20
    TabLabel.Font = Enum.Font.GothamBold
    TabLabel.Parent = Tab

    local Section = self:AddSection(Tab, options.Name)
    return Section
end

-- Section Creation
function YourLib:AddSection(tab, name)
    local Section = Instance.new("Frame")
    Section.Name = name
    Section.Size = UDim2.new(1, 0, 0, 200)
    Section.Position = UDim2.new(0, 0, 0, 50)
    Section.BackgroundColor3 = self.Themes[self.SelectedTheme].Second
    Section.BorderSizePixel = 0
    Section.Parent = tab

    return Section
end

-- Button Creation
function YourLib:AddButton(options)
    local Button = Instance.new("TextButton")
    Button.Size = UDim2.new(0, 200, 0, 50)
    Button.BackgroundColor3 = self.Themes[self.SelectedTheme].Stroke
    Button.Text = options.Name
    Button.TextColor3 = self.Themes[self.SelectedTheme].Text
    Button.TextSize = 18
    Button.Font = Enum.Font.GothamBold
    Button.Parent = options.Parent

    Button.MouseButton1Click:Connect(function()
        if options.Callback then
            options.Callback()
        end
    end)

    return Button
end

-- Toggle Creation
function YourLib:AddToggle(options)
    local Toggle = Instance.new("TextButton")
    Toggle.Size = UDim2.new(0, 200, 0, 50)
    Toggle.BackgroundColor3 = self.Themes[self.SelectedTheme].Stroke
    Toggle.Text = options.Name
    Toggle.TextColor3 = self.Themes[self.SelectedTheme].Text
    Toggle.TextSize = 18
    Toggle.Font = Enum.Font.GothamBold
    Toggle.Parent = options.Parent

    local isActive = options.Default or false
    Toggle.MouseButton1Click:Connect(function()
        isActive = not isActive
        if options.Callback then
            options.Callback(isActive)
        end
    end)

    return Toggle
end

-- Initializing the UI
function YourLib:Init()
    -- Custom initialization logic goes here
    print("YourLib UI Initialized!")
end

-- Example Usage
local Window = YourLib:MakeWindow({Name = "My Custom UI"})
local Tab = YourLib:MakeTab({Name = "Tab 1"})
local Section = YourLib:AddSection(Tab, "Section 1")

YourLib:AddButton({
    Name = "Click Me",
    Parent = Section,
    Callback = function()
        print("Button Clicked!")
    end
})

YourLib:AddToggle({
    Name = "Enable Something",
    Default = false,
    Parent = Section,
    Callback = function(state)
        print("Toggle State:", state)
    end
})

YourLib:Init()

-- EclipseLib.lua

local EclipseLib = {}

-- Initialize the Elements table if it doesn't exist
EclipseLib.Elements = EclipseLib.Elements or {}

-- Helper function to create UI elements
function EclipseLib:CreateElement(className, properties)
    local element = Instance.new(className)
    for property, value in pairs(properties) do
        element[property] = value
    end
    return element
end

-- MakeWindow function to create the main window
function EclipseLib:MakeWindow(config)
    -- Ensure there's a ScreenGui to parent the window to
    local screenGui = game.Players.LocalPlayer.PlayerGui:FindFirstChild("ScreenGui")
    if not screenGui then
        screenGui = Instance.new("ScreenGui")
        screenGui.Name = "ScreenGui"
        screenGui.Parent = game.Players.LocalPlayer.PlayerGui
    end

    -- Intro Panel (Loading screen with text and icon)
    local IntroPanel = self:CreateElement("Frame", {
        Size = UDim2.new(0, 600, 0, 100),
        Position = UDim2.new(0.5, -300, 0.5, -50), -- Adjusted to move a little more to the right
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 0.5, -- Set background transparency
        Parent = screenGui,
    })

    -- Add rounded corners to the IntroPanel
    local introCorner = self:CreateElement("UICorner", {
        CornerRadius = UDim.new(0, 11),
        Parent = IntroPanel,
    })

    -- Icon for the Intro Panel
    local Icon = self:CreateElement("ImageLabel", {
        Size = UDim2.new(0, 50, 0, 50),
        Position = UDim2.new(0, 10, 0, 25),
        Image = config.IntroIcon or "rbxassetid://4483345998", -- Default Icon if not provided
        BackgroundTransparency = 1,
        Parent = IntroPanel,
    })

    -- Intro Text Label
    local IntroTextLabel = self:CreateElement("TextLabel", {
        Text = config.IntroText,
        Size = UDim2.new(0, 500, 0, 50),
        Position = UDim2.new(0.5, -250, 0.5, -25), -- Centered in the middle of the screen
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 24,
        TextXAlignment = Enum.TextXAlignment.Center,
        TextYAlignment = Enum.TextYAlignment.Center,
        Font = Enum.Font.Gotham,
        Parent = IntroPanel,
    })

    -- Animate intro text letter by letter
    local function AnimateText()
        local letters = config.IntroText:split("")
        local index = 1
        IntroTextLabel.Text = ""
        while index <= #letters do
            IntroTextLabel.Text = IntroTextLabel.Text .. letters[index]
            index = index + 1
            wait(0.1)  -- Adjust speed of animation
        end
    end

    -- Start the animation and remove the intro screen after 5 seconds
    AnimateText()
    wait(5)
    IntroPanel:Destroy()

    -- Create the main window frame
    local Window = self:CreateElement("Frame", {
        Size = UDim2.new(0, 800, 0, 500),
        Position = UDim2.new(0.5, -400, 0.5, -250),
        BackgroundColor3 = Color3.fromRGB(30, 30, 30),
        BorderSizePixel = 0,
        AnchorPoint = Vector2.new(0.5, 0.5),
        BackgroundTransparency = 0.3, -- Make the window semi-transparent
        Parent = screenGui,  -- Parent the window to the screenGui
    })

    -- Add rounded corners to the window
    local windowCorner = self:CreateElement("UICorner", {
        CornerRadius = UDim.new(0, 11),
        Parent = Window,
    })

    -- Create the panel that holds the title and close button
    local Panel = self:CreateElement("Frame", {
        Size = UDim2.new(1, 0, 0, 50),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        Parent = Window,
    })

    -- Title label on the left side
    local Title = self:CreateElement("TextLabel", {
        Text = config.Name,
        Size = UDim2.new(0, 500, 0, 50),
        Position = UDim2.new(0, 10, 0, 0),
        BackgroundTransparency = 1,
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 24,
        TextXAlignment = Enum.TextXAlignment.Left,
        Font = Enum.Font.GothamBold,
        Parent = Panel,
    })

    -- Close button (X) on the right side
    local CloseButton = self:CreateElement("TextButton", {
        Size = UDim2.new(0, 50, 0, 50),
        Position = UDim2.new(1, -60, 0, 0),
        Text = "X",
        BackgroundColor3 = Color3.fromRGB(200, 0, 0),
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18,
        BorderSizePixel = 0,
        Parent = Panel,
    })

    -- Callback for closing the window
    CloseButton.MouseButton1Click:Connect(function()
        if config.CloseCallback then
            config.CloseCallback()
        end
        Window:Destroy()  -- Close the window when clicked
    end)

    -- Dragging functionality
    local dragging = false
    local dragInput, dragStart, startPos

    -- When the user clicks the title panel, start the dragging
    Panel.InputBegan:Connect(function(input, gameProcessed)
        if gameProcessed then return end
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = Window.Position
        end
    end)

    -- When the user moves the mouse, move the window
    Panel.InputChanged:Connect(function(input)
        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
            local delta = input.Position - dragStart
            Window.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        end
    end)

    -- When the user releases the mouse button, stop dragging
    Panel.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)

    -- Create the sidebar to hold tabs
    local Sidebar = self:CreateElement("Frame", {
        Size = UDim2.new(0, 200, 1, 0),
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundColor3 = Color3.fromRGB(40, 40, 40),
        BorderSizePixel = 0,
        Parent = Window,
    })

    -- Add rounded corners to the Sidebar
    local sidebarCorner = self:CreateElement("UICorner", {
        CornerRadius = UDim.new(0, 11),
        Parent = Sidebar,
    })

    -- Store the sidebar element
    EclipseLib.Elements.Sidebar = Sidebar

    -- Conditionally create the tab only if it is provided in config
    if config.Tab then
        local Tab = self:CreateElement("Frame", {
            Size = UDim2.new(1, 0, 0, 50),
            Position = UDim2.new(0, 0, 0, 50),
            BackgroundColor3 = Color3.fromRGB(60, 60, 60),
            BorderSizePixel = 0,
            Parent = Sidebar,
        })

        local TabLabel = self:CreateElement("TextLabel", {
            Text = config.Tab.Name,
            Size = UDim2.new(1, 0, 1, 0),
            BackgroundTransparency = 1,
            TextColor3 = Color3.fromRGB(255, 255, 255),
            TextSize = 20,
            TextXAlignment = Enum.TextXAlignment.Center,
            Font = Enum.Font.Gotham,
            Parent = Tab,
        })

        -- Store the tab element
        EclipseLib.Elements.MainTab = Tab
    end

    -- Return the window object
    return Window
end

-- Return the EclipseLib object to be used by the loadstring
return EclipseLib
